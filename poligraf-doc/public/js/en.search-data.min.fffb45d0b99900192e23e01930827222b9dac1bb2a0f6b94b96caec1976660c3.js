'use strict';(function(){const indexCfg={};indexCfg.doc={id:'id',field:['title','content'],store:['title','href'],};const index=FlexSearch.create(indexCfg);window.geekdocSearchIndex=index;index.add({'id':0,'href':'/posts/','title':"News",'content':""});index.add({'id':1,'href':'/vmware-vsan/','title':"VMware VSAN",'content':"The metrics used in the various vSAN dashboards are collected every minutes using to the QueryVsanStatistics API method of HostVsanInternalSystem. With some json ticks, it is possible to access any metrics from the vSAN cluster. And guess what! We‚Äôre already working on other cool SexiPanels for VSAN‚Ä¶\n"});index.add({'id':2,'href':'/vmware-vsphere/','title':"VMware vSphere",'content':"Fast. Very fast. That‚Äôs what we had in mind when we designed PoliGraf. When you need vSphere metrics, the obvious way is the PerformanceManager, but we need something faster so we choosed managed object properties and quickstats like ResourcePoolQuickStats. If we have no other choice, we failback to the PerformanceManager but we only query the last 15 samples of the RealTime samplingPeriod since we pull vSphere metrics every 5 minutes.\n"});index.add({'id':3,'href':'/freenas/','title':"FreeNAS",'content':"Starting from version 9.10, FreeNAS allows users to set a ‚ÄúRemote Graphite Server‚Äù target to send all the metrics harvested by Collectd. Guess what would make a nice Graphite target!\nThe FreeNAS SexiPanel (Available in PoliGraf 0.99c) let you monitor (one of) your FreeNAS server(s) in a ‚Äúsingle pane of glass‚Äù experience.\nThe ‚Äúpartition‚Äù and ‚Äúinterface‚Äù drop down menus let you select one, some or all of the ZFS datasets and network interfaces, including LACP LAGG. The ARC row let you check the ZFS Adaptive Replacement Cache usage and hit ratio. The HD row is a stacked histogram of the disks IOs.\nSay goodbye to the oldish RRD style reporting tabs, just set the ip address of your PoliGraf appliance as Graphite target and reboot your FreeNAS to apply üòâ\n"});index.add({'id':4,'href':'/windows/','title':"Windows",'content':"Leveraging the built-in Graphite listener of PoliGraf, we introduced Windows support in version 0.99c with basic cpu-ram-hdd metrics :\nTo push the metrics we chose to use the recommended Windows version of collectd, SSC Serv.\nAfter instaling the lightweight agent, just add your PoliGraf appliance IP address with ‚ÄúSSC.‚Äù as prefix and you‚Äôre good to go.\nNow you can monitor your VEEAM proxies, like a boss!\n"});index.add({'id':5,'href':'/smart/','title':"S.M.A.R.T.",'content':"Sorry to keep you waiting, but soon it will be all good, please enjoy below teaser of what‚Äôs coming, aka SexiPanel for S.M.A.R.T. counters  "});index.add({'id':6,'href':'/hp-c7000/','title':"HP c7000",'content':"Sorry to keep you waiting, but soon it will be all good, please enjoy below teaser of what‚Äôs coming, aka SexiPanel for HP C7000 enclosure and Virtual Connect Module  "});index.add({'id':7,'href':'/shortcodes/','title':"Shortcodes",'content':""});index.add({'id':8,'href':'/posts/initial-release/','title':"Initial release",'content':"This is the first release of the Geekdoc theme.\nWe decided to build a dedicated website for it instead of keeping surcharging default website as it will add awesomeness for you and for us as well :)\n"});index.add({'id':9,'href':'/posts/hello_geekdoc/','title':"Hello Geekdoc",'content':"This is the first release of the Geekdoc theme.\nDolor sit, sumo unique argument um no. Gracie nominal id xiv. Romanesque acclimates investiture. Ornateness bland it ex enc, est yeti am bongo detract re. Pro ad prompts feud gait, quid exercise emeritus bis e. In pro quints consequent, denim fastidious copious quo ad. Stet probates in duo.\nAmalia id per in minimum facility, quid facet modifier ea ma. Ill um select ma ad, en ferric patine sentient vim. Per expendable foreordained interpretations cu, maxim sole pertinacity in ram. Que no rota alters, ad sea sues exercise main rum, cu diam mas facility sea.\n"});index.add({'id':10,'href':'/shortcodes/buttons/','title':"Buttons",'content':"Buttons are styled links that can lead to local page or external link.\n{{\u0026lt; button relref=\u0026#34;/\u0026#34; [class=\u0026#34;...\u0026#34;] \u0026gt;}}Get Home{{\u0026lt; /button \u0026gt;}}{{\u0026lt; button href=\u0026#34;https://github.com/xoxys/hugo-geekdoc\u0026#34; \u0026gt;}}Contribute{{\u0026lt; /button \u0026gt;}}Example  Get Home   Contribute   "});index.add({'id':11,'href':'/shortcodes/columns/','title':"Columns",'content':"Columns help organize shorter pieces of content horizontally for readability.\n{{\u0026lt; columns \u0026gt;}} \u0026lt;!-- begin columns block --\u0026gt; # Left Content Dolor sit, sumo unique argument um no ... \u0026lt;---\u0026gt; \u0026lt;!-- magic sparator, between columns --\u0026gt; # Mid Content Dolor sit, sumo unique argument um no ... \u0026lt;---\u0026gt; \u0026lt;!-- magic sparator, between columns --\u0026gt; # Right Content Dolor sit, sumo unique argument um no ... {{\u0026lt; /columns \u0026gt;}} Example Left Dolor sit, sumo unique argument um no. Gracie nominal id xiv. Romanesque acclimates investiture. Ornateness bland it ex enc, est yeti am bongo detract re. Pro ad prompts feud gait, quid exercise emeritus bis e. In pro quints consequent, denim fastidious copious quo ad. Stet probates in duo.  Mid Content Dolor sit, sumo unique argument um no. Gracie nominal id xiv. Romanesque acclimates investiture. Ornateness bland it ex enc, est yeti am bongo detract re.  Right Content Dolor sit, sumo unique argument um no. Gracie nominal id xiv. Romanesque acclimates investiture. Ornateness bland it ex enc, est yeti am bongo detract re. Pro ad prompts feud gait, quid exercise emeritus bis e. In pro quints consequent, denim fastidious copious quo ad. Stet probates in duo.   "});index.add({'id':12,'href':'/shortcodes/expand/','title':"Expand",'content':"Expand shortcode can help to decrease clutter on screen by hiding part of text. Expand content by clicking on it.\nExample Default {{\u0026lt; expand \u0026gt;}}## Markdown content Dolor sit, sumo unique ... {{\u0026lt; /expand \u0026gt;}} Expand ‚Üï  Markdown content Dolor sit, sumo unique argument um no. Gracie nominal id xiv. Romanesque acclimates investiture. Ornateness bland it ex enc, est yeti am bongo detract re.   With Custom Label {{\u0026lt; expand \u0026#34;Custom Label\u0026#34; \u0026#34;...\u0026#34; \u0026gt;}}## Markdown content Dolor sit, sumo unique ... {{\u0026lt; /expand \u0026gt;}} Custom Label ...  More markdown Dolor sit, sumo unique argument um no. Gracie nominal id xiv. Romanesque acclimates investiture. Ornateness bland it ex enc, est yeti am bongo detract re. Pro ad prompts feud gait, quid exercise emeritus bis e. In pro quints consequent, denim fastidious copious quo ad. Stet probates in duo.   "});index.add({'id':13,'href':'/shortcodes/hints/','title':"Hints",'content':"Hint shortcode can be used as hint/alerts/notification block. There are 3 colors to choose: info, warning and danger.\n{{\u0026lt; hint [info|warning|danger] \u0026gt;}}**Markdown content**\\ Dolor sit, sumo unique argument um no. Gracie nominal id xiv. Romanesque acclimates investiture. Ornateness bland it ex enc, est yeti am bongo detract re. {{\u0026lt; /hint \u0026gt;}}Example Markdown content\nDolor sit, sumo unique argument um no. Gracie nominal id xiv. Romanesque acclimates investiture. Ornateness bland it ex enc, est yeti am bongo detract re.  Markdown content\nDolor sit, sumo unique argument um no. Gracie nominal id xiv. Romanesque acclimates investiture. Ornateness bland it ex enc, est yeti am bongo detract re.  Markdown content\nDolor sit, sumo unique argument um no. Gracie nominal id xiv. Romanesque acclimates investiture. Ornateness bland it ex enc, est yeti am bongo detract re.  "});index.add({'id':14,'href':'/shortcodes/includes/','title':"Includes",'content':"Include shortcode can include files of different types. By specifying a language, the included file will have syntax highlighting.\nShortcode {{\u0026lt; include file=\u0026#34;relative/path/from/hugo/root\u0026#34; language=\u0026#34;go\u0026#34; markdown=[false|true] \u0026gt;}}Attributes:\n   Name Usage default     file path to the included file relative to the hugo root empty value   language* language for syntax highlighting empty value   markdown included file is markdown false   options highlighting options linenos=table    * if not set, the content will be rendered as plain HTML\nInclude *.yml file with options {{\u0026lt; include file=\u0026#34;config.yaml\u0026#34; language=\u0026#34;yaml\u0026#34; options=\u0026#34;linenos=table,hl_lines=5-6,linenostart=100\u0026#34; \u0026gt;}}100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131  ---# baseURL: https://doc.poligraf.io/baseURL:https://vmdude.github.io/poligraf-doc/public/title:doc.poligraf.iotheme:hugo-geekdocpygmentsUseClasses:truepygmentsCodeFences:truecanonifyURLs:true# Geekdoc configurationdisablePathToLower:trueenableGitInfo:true# Needed for mermaid shortcodesmarkup:goldmark:renderer:unsafe:truetableOfContents:startLevel:1endLevel:9params:geekdocToC:3geekdocRepo:https://github.com/polibytes/poligraf-docgeekdocEditPath:edit/master/contentgeekdocSearch:true# geekdocLegalNotice: https://thegeeklab.de/legal-notice/#contact-information# geekdocPrivacyPolicy: https://thegeeklab.de/legal-notice/#privacy-policy   Include *.md file Included markdown files will be rendered using the markdownify filter.\nLocation of markdown files\nIf you include markdown files that should not get a menu entry, place them outside the content folder or exclude them otherwise.  {{\u0026lt; include file=\u0026#34;static/includes/table.md.part\u0026#34; markdown=\u0026#34;true\u0026#34; \u0026gt;}}Test Table    Head 1 Head 2 Head 3     1 2 3     Include *.html file HTML content will be filtered by the safeHTML filter and added to the rendered page output.\n{{\u0026lt; include file=\u0026#34;static/includes/example.html.part\u0026#34; \u0026gt;}} This is heading 1 This is heading 2 This is heading 3 This is heading 4 This is heading 5 This is heading 6  "});index.add({'id':15,'href':'/shortcodes/mermaid/','title':"Mermaid",'content':"Mermaid is library for generating SVG charts and diagrams from text.\nExample {{\u0026lt; mermaid class=\u0026#34;text-center\u0026#34;\u0026gt;}}sequenceDiagram Alice-\u0026gt;\u0026gt;Bob: Hello Bob, how are you? alt is sick Bob-\u0026gt;\u0026gt;Alice: Not so good :( else is well Bob-\u0026gt;\u0026gt;Alice: Feeling fresh like a daisy end opt Extra response Bob-\u0026gt;\u0026gt;Alice: Thanks for asking end {{\u0026lt; /mermaid \u0026gt;}}    document.addEventListener(\"DOMContentLoaded\", function(event) { mermaid.initialize({ flowchart: { useMaxWidth: true } }); });  sequenceDiagram Alice-Bob: Hello Bob, how are you? alt is sick Bob-Alice: Not so good :( else is well Bob-Alice: Feeling fresh like a daisy end opt Extra response Bob-Alice: Thanks for asking end    "});index.add({'id':16,'href':'/shortcodes/tabs/','title':"Tabs",'content':"Tabs let you organize content by context, for example installation instructions for each supported platform.\n{{\u0026lt; tabs \u0026#34;uniqueid\u0026#34; \u0026gt;}}{{\u0026lt; tab \u0026#34;macOS\u0026#34; \u0026gt;}}# macOS Content {{\u0026lt; /tab \u0026gt;}}{{\u0026lt; tab \u0026#34;Linux\u0026#34; \u0026gt;}}# Linux Content {{\u0026lt; /tab \u0026gt;}}{{\u0026lt; tab \u0026#34;Windows\u0026#34; \u0026gt;}}# Windows Content {{\u0026lt; /tab \u0026gt;}}{{\u0026lt; /tabs \u0026gt;}}Example macOS  macOS This is tab macOS content.\nDolor sit, sumo unique argument um no. Gracie nominal id xiv. Romanesque acclimates investiture. Ornateness bland it ex enc, est yeti am bongo detract re. Pro ad prompts feud gait, quid exercise emeritus bis e. In pro quints consequent, denim fastidious copious quo ad. Stet probates in duo.\n Linux  Linux This is tab Linux content.\nDolor sit, sumo unique argument um no. Gracie nominal id xiv. Romanesque acclimates investiture. Ornateness bland it ex enc, est yeti am bongo detract re. Pro ad prompts feud gait, quid exercise emeritus bis e. In pro quints consequent, denim fastidious copious quo ad. Stet probates in duo.\n Windows  Windows This is tab Windows content.\nDolor sit, sumo unique argument um no. Gracie nominal id xiv. Romanesque acclimates investiture. Ornateness bland it ex enc, est yeti am bongo detract re. Pro ad prompts feud gait, quid exercise emeritus bis e. In pro quints consequent.\n  "});index.add({'id':17,'href':'/shortcodes/toc-tree/','title':"Toc Tree",'content':"The toc-tree shortcode will generate a Table of Content from a section file tree of your content directory. The root of the resulting ToC will be the page on which you define the shortcode.\n{{\u0026lt; toc-tree \u0026gt;}}Example As said, the root will be the site on which the shortcode was used, you can see a demo including nesting in the ToC Tree section.\n"});index.add({'id':18,'href':'/shortcodes/toc/','title':"Toc",'content':"Simple wrapper to generate a page Table of Content from a shortcode.\n{{\u0026lt; toc \u0026gt;}}   Level 1 Level 2  Level 2.1  Level 2.1.1  Level 2.1.1.1  Level 2.1.1.1.1       Level 2.2       Level 1 Dolor sit, sumo unique argument um no. Gracie nominal id xiv. Romanesque acclimates investiture. Ornateness bland it ex enc, est yeti am bongo detract re. Pro ad prompts feud gait, quid exercise emeritus bis e. In pro quints consequent, denim fastidious copious quo ad. Stet probates in duo.\nLevel 2 Amalia id per in minimum facility, quid facet modifier ea ma. Ill um select ma ad, en ferric patine sentient vim. Per expendable foreordained interpretations cu, maxim sole pertinacity in ram.\nLevel 2.1 Amalia id per in minimum facility, quid facet modifier ea ma. Ill um select ma ad, en ferric patine sentient vim. Per expendable foreordained interpretations cu, maxim sole pertinacity in ram.\nLevel 2.1.1 Amalia id per in minimum facility, quid facet modifier ea ma. Ill um select ma ad, en ferric patine sentient vim.\nLevel 2.1.1.1 In pro quints consequent, denim fastidious copious quo ad.\nLevel 2.1.1.1.1 In pro quints consequent, denim fastidious copious quo ad.\nLevel 2.2 Dolor sit, sumo unique argument um no. Gracie nominal id xiv. Romanesque acclimates investiture. Ornateness bland it ex enc, est yeti am bongo detract re. Pro ad prompts feud gait, quid exercise emeritus bis e.\nAmalia id per in minimum facility, quid facet modifier ea ma. Ill um select ma ad, en ferric patine sentient vim. Per expendable foreordained interpretations cu, maxim sole pertinacity in ram.\n"});index.add({'id':19,'href':'/toc-tree/level-1/','title':"Level 1",'content':"Level 1\n   Level 1.1     Level 1.2     Level 1.3     Level 1.3.1       "});index.add({'id':20,'href':'/toc-tree/level-2/','title':"Level 2",'content':"Level-2\n"});index.add({'id':21,'href':'/vmware-vsphere/cluster-fullstats/','title':"Cluster Fullstats",'content':"The Cluster FullStats dashboard offers you a single pane of glass for your cluster performance and usage metrics. You will find simple informations like CPU/RAM usage or vmnic traffic but also complex graph like memory quickstats (inspired by the vCenter Cluster utilization tab) or the distributed fairness graph with the fairness quickstats of distributed CPU/RAM resources allocation on the cluster hosts.\nIn the IORM row, you‚Äôll find the average latency and the IOPS sum of the cluster shared datastores. The metrics used here were initialy introduced by Storage I/O Control but since vSphere 5.1 you can chose to only collect the stats without enabling SIOC. We encourage you to do enable the stats collection since those counters are really mission critical. Besides, the latency metric resolution is 1 microsecond where the legacy latency metrics resolution is 1 milisecond and normalized meaning cluster wide latency.\nIf the stats collection is not enabled, we failback to the legacy read/write metrics from a random host in the cluster. Unfortunately, in failback mode you won‚Äôt have the aggregated IOPS metric since collecting metrics from all hosts would be very time consuming and we want to keep PoliGraf very fast!\nAll the metrics you will find here are aggregated to give you a full cluster level experience. For example, the shared datastores utilization graph aggregates all the multipleHostAccess datastores in the cluster so you won‚Äôt see local storage here as we hope it does not participate in your vm storage.\n\nIf you need to aggregate clusters, you want to use the All Cluster FullStats dashboard and select the clusters you want to participate in the graphs.\n\nIn PoliGraf 0.99d, we‚Äôve added a mem.allocated ‚Äúcomputed‚Äù metric (aka provisioned memory), the vCPU/pCPU ratio and the Power usage counter (for the hardware vendor that supports it). In version 0.99e, we‚Äôve also added vmhba traffic:\n\nWe also added hosts count in the VM count graph :\n"});index.add({'id':22,'href':'/vmware-vsphere/cluster-network-usage/','title':"Cluster Network Usage",'content':"This dashboard allows you to compare the selected vmnic of the selected ESX in your favorite cluster. If this cluster is contained in a blade enclosure, you‚Äôre now able to check what is going in and out from your chassis. Noticed the cacti style of the graphs?\n\nIn version 0.99e, we‚Äôve added the droppedTX, droppedRX, errorsTX and errorsRX counters (on the right Y axis) so can have a bit of history for those metrics in your favourite tool:\n"});index.add({'id':23,'href':'/vmware-vsphere/cluster-superstats/','title':"Cluster Superstats",'content':"In PoliGraf 0.99f, we introduced new cluster level metrics computed from hosts metrics like hba, network, storage, power etc‚Ä¶ So now you can visualise your 1000 clusters stats in a second:\n\nWe also added datastore count, cpu latency and allocated memory.\n"});index.add({'id':24,'href':'/vmware-vsphere/datastore-usage-distribution/','title':"Datastore Usage Distribution",'content':"Ever Wonder what your datastores are full of? How much swap and snapshots are consuming per cluster?\nSince PoliGraf 0.99d the Multi Cluster Datastore Usage Distribution dashboard let you monitor the datastore usage per filetype like the old-shool VMware pie chart but Harder, Better, Faster, Stronger and at the cluster level:\n\nBecause the Disk extent (-flat/-delta/-s/-rdm/-rdmp.vmdk) file VMware File-type was a bit too inclusive, we took the liberty to split it to add new ones like rdmExtent, rdmpExtent, snapshotExtent and snapshotDescriptor. In the future, we also plan to add vsanSparseVariant.\n\nSince we added a FileType selector, you can pick snapshot file types and track the waste space on your entire infrastructure! And just because we know you‚Äôd love it, we also added a snapshot counter on the right Y axis üòâ\n\nLast but not least, if you need to see the big picture, we also created the All Datastore Usage Distribution dashboard:\n\n"});index.add({'id':25,'href':'/vmware-vsphere/multi-cluster-capacity-planning/','title':"Multi Cluster Capacity Planning",'content':"‚ÄúHow many more VMs can we deploy on those clusters?‚Äù Your boss probably asked you this one a dozen time. This time is over. This great dashboard shows you how many vm runs and how many you got left based on compute and storage consumption for each cluster.\nWant to compare only 3 of them? Just select them in the list. You got different SLA based on overcommit ratios or replication on your DR site? Use the scale variable to change the filling ratio of the compute.\n\nIn PoliGraf 0.99f, thanks to Joe‚Äôs idea, we‚Äôve added the vm compute and storage averages so you know what the vm left is based on:\n\n\n"});index.add({'id':26,'href':'/vmware-vsphere/multi-cluster-quickstats/','title':"Multi Cluster Quickstats",'content':"If you need to compare the basic compute and storage metrics between your clusters, this is the dashboard you‚Äôre looking for.\n\nIf you need to compare standalone ESX, it‚Äôs the Multi ESX QuickStats.\n\n"});index.add({'id':27,'href':'/vmware-vsphere/multi-cluster-usage/','title':"Multi Cluster Usage",'content':"In this dashboard, each cluster is a color box displaying the most constrained resource among CPU, RAM and storage. For example, when a cluster is using 33% of CPU, 58% of RAM and 40% of the shared storage, 58% will be displayed. If another cluster uses 21% of CPU, 45% of RAM and 76% of the shared storage, 76% will be displayed. The box is green between 1% and 65%, yellow between 65% and 80%, red above 80% and white under 1% so you can‚Äôt miss anything in your infrastructure.\n\n"});index.add({'id':28,'href':'/vmware-vsphere/multi-datastore-usage/','title':"Multi Datastore Usage",'content':"You got a mail from your boss asking you a storage report to plan the next storage array migration? Just go the Multi Datastore Usage dahsboard, pick the target clusters and send him a screenshot. It only took you 15sec. Or maybe you‚Äôre just curious about the overall storage overcommit of your VDI infrastructure. The big graph a the top is the aggregation of every selected datastores of the selected clusters displayed in the small graph at the bottom.\n\n"});index.add({'id':29,'href':'/vmware-vsphere/multi-storage-pod-usage/','title':"Multi Storage Pod Usage",'content':"Using Storage Pod aka Datastore Cluster? In PoliGraf 0.99f we‚Äôve introduced an early Storage Pod Usage dashboard with a computed uncommitted metric from the child datastores, very handy. We called it ‚Äúearly support‚Äù because we didn‚Äôt linked the pods to the clusters but to the datacenters because it‚Äôs the way it is in the VMware API world, you can have a pod for many clusters. So until we figure out a smart way to do it, we‚Äôll stick to that. We‚Äôre sure you‚Äôll love it anyway üòâ\n\n"});index.add({'id':30,'href':'/web-admin/export-import/','title':"Export Import",'content':"In 0.99e version, we‚Äôve added the Export / Import section to let you migrate your PoliGraf configuration (vCenter credentials) AND data (wisper files) from one appliance to another.\nThe process is fairly simple, you click on Generate export bundle and the appliance creates you an iso file to download (this might take from few seconds to few minutes depending on your environment size). If a dump is already present, Generate export bundle function will overwrite it without prompt.\nOnce you got the iso file, you map it to your new PoliGraf VM‚Äôs CD-ROM drive, refresh the page and then click on Run import process (This might also take a while depending on your environment). At the end of the process, the iso is ejected for safety purpose:\nThe import only applies to vCenter connections and collected metrics, NO PASSWORD will be changed in the process.  Be aware that importing a dump from or to a different version is not supported even if it is supposed to work.  Also, be very careful when importing since the process will overwrite anything in its way so it might be a good thing in a migration scenario but also a disaster if you do it on the wrong appliance. Anyway, we always advise you to make a backup or create a snapshot before patching or importing data on your VMs.  The export won‚Äôt contain any of your custom Grafana dashboards and you‚Äôll need to export/import via json files yourself as documented on the Grafana‚Äôs website.\n"});index.add({'id':31,'href':'/web-admin/house-cleaner/','title':"House Cleaner",'content':"The House Cleaner (formerly Stats Remover) will let you manage Graphite data (Whisper files) and vCenter session data (Token files). Through this web-ui, you will be able to remove legacy or orphaned stats (i.e. after datastore removal), vCenter session files (for authentication troubleshooting) and oldest Whisper files that may no longer be used. They will be displayed in a nice data tree and will let you select any (one or more) files in order to remove them (don‚Äôt be afraid, it will ask you some noisy confirmation before hurting your PoliGraf). As Grafana is based on dynamic query on whisper files, the effect will be immediate, you will not need to restart anything, what you wanted gone is gone for sure!\nIn PoliGraf 0.99d we limit the scope to folders to avoid timeouts in big environments. We also added the ‚ÄúAuto Purge‚Äù feature (disabled by default) so you don‚Äôt have to worry about removed objects anymore like deleted items, temporary datastores, VM migrated from a cluster to another one, etc‚Ä¶ We hard coded this feature to 120 days but we plan to make this setting tunable:\n"});index.add({'id':32,'href':'/web-admin/log-viewer/','title':"Log Viewer",'content':"This section have been added to make debugging easier for everyone. It will provides log detail for several components of PoliGraf (such as VI Offline inventory, or statistics runner, ‚Ä¶). You will be able to display on your browser the content of these logs for troubleshooting purpose. It can guide you to identify the source of the issue (bad username/password combination, runtime error, ‚Ä¶) and can be useful for us to give you a hand if you need.\n"});index.add({'id':33,'href':'/web-admin/package-updater/','title':"Package Updater",'content':"As we plan to add lot of features and content to the PoliGraf appliance, we wanted to make update flawless for you. We didn‚Äôt want to say to you ‚ÄúPlease update by redeploying a new appliance‚Äù. So we built a native updater that‚Äôs available in this section. When we will be releasing a new version of PoliGraf, we will provide you a *.sup package (for PoliGraf Update Package) that you will upload to your appliance thanks to this page. After the upload is successfull (it shouldn‚Äôt be long as the package will be usually just a few hundred Kb), you will be able to start the upgrade process. After a few confirmation (we‚Äôre never too safe), the upgrade process will start, letting you enjoy the up-to-date version of PoliGraf, without any dataloss obviously.\n"});index.add({'id':34,'href':'/web-admin/pull-exec-time/','title':"Pull Exec Time",'content':"As PoliGraf will retrieve information on vCenter servers, it‚Äôs important to keep track of the time it takes to query API. So we added a Pull Exec Time dashboard that will keep track of these query durations for all calls that are made by the appliance (VI, VSAN and inventory). Usually, scripts run in a few seconds, so if queries took too long, you‚Äôll be able to see it right away:\n"});index.add({'id':35,'href':'/web-admin/refresh-inventory/','title':"Refresh Inventory",'content':"The VI Offline Inventory is automatically updated every 6 hours. If you want to force a refresh, you can use this section to perform a manual update. Just navigate from the PoliGraf Web Admin dashboard to this section and follow the walk-through explanation (basically, you just have to press a one or two buttons, we told you we wanted to make it easy-as-pie!).\n"});index.add({'id':36,'href':'/vmware-vsphere/vsphere-top-n-vm-stats/','title':"All Cluster Top N VM Stats",'content':"Starting from PoliGraf 0.99b you can monitor the top N VM quickstats***** (1 to 20 VM per graph). Now you can find the bad *sses of your datacenters!\n\nOf course you can also search and pick some VM of your choice to compare their stats. The legend is formated as such to help you locate any tango: \u0026lt;cluster_name\u0026gt;.\u0026lt;vm_name\u0026gt;\n\nIn the PoliGraf 0.99d release, we revisited this dashboard to add snapshot usage (storage.delta), CPU \u0026amp; MEM usage in %, the world famous CPU Ready metric (aka %RDY), CPU Latency (aka %lat_c) and maxTotalLatency. Now you can check everything about all or some specific VMs in a single pane of glass:\n\nIn 0.99e version, we‚Äôve added vm network and disk usage:\n\n\nYou may want a top 5 VM per cluster instead? We did that too üòâ\nCheck out the Multi Cluster Top N VM QuickStats dashboard and simply slide over to reveal the usual suspects:\n\n\nIn PoliGraf 0.99f, we added a variant of that dashboard with overcommit metrics but without the Top N feature for those with big inventory just wanting to compare a bunch of VMs:\n\n"});index.add({'id':37,'href':'/categories/','title':"Categories",'content':""});index.add({'id':38,'href':'/vmware-vsphere/cluster-iorm/','title':"Cluster IORM Stats",'content':"The IORM (aka SIOC) Stats dashboard let you compare datastores Storage I/O Control latency and IOPS metrics among clusters. See Cluster FullStats dashboard for details.\n\nIf you need to aggregate clusters, you want to use the Multi Cluster IORM Stats dashboard and select the clusters you want to participate in the graphs.\n\n"});index.add({'id':39,'href':'/vmware-vsphere/cluster-multi-esx-litestats/','title':"Cluster Multi ESX LiteStats",'content':"Since we got some spare stats, we used it in a light host centric dashboard so you can have a quick look at ALL your hosts CPU/RAM usage and uptime (cluster member and standalone).\n\n"});index.add({'id':40,'href':'/vmware-vsan/vsan-disk-utilization/','title':"Disk Utilization",'content':"The vSAN DiskGroup Capacity dashboard is really useful to monitor the vSAN space usage and distribution but sometime you would need to monitor the space consumption at the device level. For instance, when you evacuate a device to replace it, it‚Äôs critical to be able to follow the ongoing process. That‚Äôs why in PoliGraf 0.99d we added the vSAN Disk Utilization dashboard:\n\n"});index.add({'id':41,'href':'/vmware-vsan/vsan-diskgroup-capacity/','title':"Diskgroup Capacity",'content':"In PoliGraf 0.99b we added an enhanced version of the initial vSAN Capacity dashboard. The vSAN DiskGroup Capacity let you monitor the space usage of each diskgroup of each cluster node. Now you see what is going on when you manually initiate Proactive Rebalance.\n"});index.add({'id':42,'href':'/','title':"Documentation",'content':"  \nHere is the official documentation for our PoliGraf project.\nWeb Admin blabla webadmin\nVMware VSAN blabla vsan\nVMware vSphere blabla vsphere\nFreeNAS blabla freenas\nWindows blabla windows\nHP c7000 blabla c7000\nS.M.A.R.T. blabla smart\n"});index.add({'id':43,'href':'/vmware-vsphere/esx-fullstats/','title':"ESX FullStats",'content':"The ESX FullStats dashboard is similar to the Cluster FullStats but for standalone ESX servers. Because we focus on ESX resources here, we did not aggregated the datastore and vmnic metrics. You‚Äôll find a graph for every single one of them but you can select which one will be displayed if not all.\nLike in Cluster Fullstats, you‚Äôll be able to track memory overcommit (i.e. TPS) in the memory quickstats graph but also CPU power management impact in the CPU utilization/demand graph if demand\u0026gt;usage.\n\n"});index.add({'id':44,'href':'/vmware-vsphere/flambx/','title':"FlambX",'content':"The FlambX (pronounced Flambi-X) dashboard is not actually for you but rather for managers who love BIG numbers. But you‚Äôll probably like it too. It basicaly shows your infrastructure horsepower, or Firepower sometimes.\n\n"});index.add({'id':45,'href':'/toc-tree/level-1/level-1-1/','title':"Level 1.1",'content':"Level 1.1\n"});index.add({'id':46,'href':'/toc-tree/level-1/level-1-2/','title':"Level 1.2",'content':"Level 1.2\n"});index.add({'id':47,'href':'/toc-tree/level-1/level-1-3/','title':"Level 1.3",'content':"Level 1.3\n   Level 1.3.1     "});index.add({'id':48,'href':'/toc-tree/level-1/level-1-3/level-1-3-1/','title':"Level 1.3.1",'content':"Level 1.3.1\n"});index.add({'id':49,'href':'/toc-tree/level-2/level-2-1/','title':"Level 2.1",'content':"Level 2.1\n"});index.add({'id':50,'href':'/toc-tree/level-2/level-2-2/','title':"Level 2.2",'content':"Level 2.2\n"});index.add({'id':51,'href':'/vmware-vsphere/multi-cluster-cpu-ram-utilization/','title':"Multi Cluster CPU/RAM Utilization",'content':"The CPU/RAM Utilization dashboard allows to compare the compute metrics between clusters. Why? Because in 1s you‚Äôll be able to catch if you forgot a host in maintenance mode in a cluster because the effective metric is much low that the total metric. You‚Äôll also be able to see the impact of the power management policy you set on your servers with the demand and usage metrics. You may also noticed how low the guest usage (active) is compared to private metric (consumed). Or simply check how well balanced your clusters are.\n\n"});index.add({'id':52,'href':'/vmware-vsphere/top-n-vm-latency/','title':"Multi Cluster Top N VM Latency",'content':"Storage latency is certainly one of the most critical metric to monitor because of its very unique effect on user perception. See how we could be amazed by NVMe devices for instance (if you don‚Äôt know what I‚Äôm talking about, stop everything and try one now). The 20 year old post from Stuart Cheshire is still very accurate, It‚Äôs the Latency, Stupid!\nThe very first version of PoliGraf came out with latency metrics of course but at the datastore level. During some troubleshooting involving storage latency, we noticed that sometimes the VM latency was way higher than the datastore latency where the VM was sitting. So in the 0.99d release, we decided to add the famous maxTotalLatency:\n Highest latency value across all disks used by the host. Latency measures the time taken to process a SCSI command issued by the guest OS to the virtual machine. The kernel latency is the time VMkernel takes to process an IO request. The device latency is the time it takes the hardware to handle the request.\n Meet the Multi Cluster Top N VM Latency where you can compare, per cluster, the top N maxTotalLatency metric of your VMs:\n\n"});index.add({'id':53,'href':'/vmware-vsphere/vsphere-top-n-vm-overcommit/','title':"Multi Cluster Top N VM Overcommit",'content':"We could have added those graphs in the Top N VM Stats dashboard but we wanted to kept the bad and the ugly apart from the good. Since PoliGraf 0.99b you can also monitor the top N overcommited***** VM (1 to 20 VM per graph).\n\nThis dashboard will help you to identify situations like memory limits, vm that have been in contention in the past with remaining zipped/swapped pages or idle tax.\n* The graph names match the Counters names of the Performance Manager to let you dig into the details if you want to.\n"});index.add({'id':54,'href':'/vmware-vsphere/multi-cluster-top-n-vm-snapshot/','title':"Multi Cluster Top N VM Snapshot",'content':"In the history of VMware monitoring tools, PoliGraf 0.99d is the first to introduce VM snapshots monitoring:\nNow you can analyze what‚Äôs happening during your backup window and monitor with a surgical precision, per cluster, the snapshot size evolution of your VMs. With this new dashboard, you won‚Äôt miss ANY forgotten snaps EVER!\nAnd since we leverage the parent property of the vdisk objects to determine if it‚Äôs a real snapshot (or a vdisk with a funny name), you can also keep track of the hidden snapshots (aka non-consolidated) with this dashboard.\n"});index.add({'id':55,'href':'/vmware-vsphere/top-n-vmfs-latency/','title':"Multi Cluster Top N VMFS Latency",'content':"The Cluster IORM Stats dashboards are great when it comes to compare datastores in the same cluster or average \u0026amp; worst latency between cluster but sometimes it‚Äôs useful to be able compare the worst datastores per cluster. Hence the Multi Cluster Top N VMFS Latency dashboard. Don‚Äôt let the name fools you, NFS are also in the game (Not vSAN though).\n\n"});index.add({'id':56,'href':'/vmware-vsphere/multi-cluster-vcpu-pcpu/','title':"Multi Cluster vCPU/pCPU",'content':"Whether you are running application servers or virtual desktops, you need adjust and monitor the vCPU per physical core ratio. Having a bit of history on that metric let you also anticipate incoming needs so you can scale before getting overcommit issues. That‚Äôs why in PoliGraf 0.99d we added a new dedicated dashboard in case you need to compare cluster vCPU consolidation ratios:\n\n"});index.add({'id':57,'href':'/vmware-vsphere/multi-cluster-vmotion/','title':"Multi Cluster vMotion",'content':"The vMotion frequency is a very useful indicator of the cluster compute resources availabilty for your VMs. If you witness a lot of vMotions in one of your cluster, you may want to evacuate VMs, add resources or change the DRS migration threshold to a more restrictive level.\n\n"});index.add({'id':58,'href':'/vmware-vsan/vsan-naa-latency/','title':"NAA Latency",'content':"The vSAN NAA Latency dashboard (added in PoliGraf 0.99b) let you check the individual latencies of every single device in the vSAN cluster sorted by Network Addressing Authority identifier.\nIn v0.99d we‚Äôve also added the hostname owner of the device on each graphic:\n"});index.add({'id':59,'href':'/vmware-vsan/vsan-resync/','title':"Resync",'content':"Instead of endlessly clicking on the refresh button in the ‚ÄúResyncing Components‚Äù tab of the WebClient, we added the vSAN Resync dashboard since PoliGraf 0.99b:\nNow you can really see what‚Äôs going on when objects are being resynced, rebuilded or rebalanced. We also added a Recovery Rate graph to check how fast your vSAN backend performs.\nStarting from version 0.99e, we pushed even further and leveraged the vSAN 6.7 API when available. In vSAN 6.7 VMware introduced the Sync State Reason so you also know WHY the components are being (re)sync. And if some components are synced for several reasons, you‚Äôll know it too of course. Only in PoliGraf üòâ\n The list of reasons indicate why the component went into syncing state. The API returns full list of reasons for background. However, sometimes it‚Äôs userful to generate an aggregate reason, in which case the following priorities could be used:\nP0: ‚Äúevacuate‚Äù ()\nP1: ‚Äúdying_evacuate‚Äù ()\nP2: ‚Äúrebalance‚Äù ()\nP3: ‚Äúrepair‚Äù, ‚Äúreconfigure‚Äù ()\nP4: ‚Äústale‚Äù\ndying_evacuate: The component is being moved out when a disk is going to die.\nevacuate: The component is created and resyncing after evacuate disk group or host to ensure accessibility and full data evacuation.\nrebalance: The component is created and resyncing for rebalancing.\nreconfigure: The component is created and resyncing after vSAN object was resized or its policy was changed.\nrepair: The component is created and resyncing to repair a bad component.\nstale: The component is syncing because it was stale.\n "});index.add({'id':60,'href':'/vmware-vsan/vsan-space-usage-report/','title':"Space Usage Report",'content':"PoliGraf 0.99c ships with vSAN 6.2 SDK enabling new kind of dashboards. vSAN Space Usage Report aims to enhance the vSAN Capacity tab in the vSphere Web Client:\n\nYou should check the excellent Cormac‚Äôs blog post regarding the role of each object type but also the SDK documentation to match with the ‚Äúinteral‚Äù property names.\n"});index.add({'id':61,'href':'/vmware-vsan/vsan-ssd-stats/','title':"SSD Stats",'content':"The vSAN SSD Stats dashboard shows various statistics from the caching devices of the vSAN diskgroups.\nThe Write Buffer Fill Rate graph is probably the most important as it helps to understand how fast the write buffer fills up and how fast the data are flushed on disk (or flash capacity). As per vSAN Observer settings, the threshold of this metric is 75%.\nAccording to VMware Virtual SAN Diagnostics and Troubleshooting Reference Manual ‚ÄúOne would expect that on a reasonably balanced system that a significant amount of write buffer is consumed. This is a good metric to check if you are planning to place more workloads on Virtual SAN. It can tell you whether you have enough flash capacity to cater for the additional workloads.‚Äù\nThe Evictions graph is described in VMware Virtual SAN Diagnostics and Troubleshooting Reference Manual as ‚Äúhow often Virtual SAN has to evict data blocks from the write buffer to make room for new data blocks. [‚Ä¶] Excessive evictions could mean that there are workloads running that are not suitable for a caching storage system like Virtual SAN (sustained sequential write operations), or that the flash cache has been undersized for the workload requirements.‚Äù\nThe IOPS and Bandwidth graph are obviously speaking for themselves.\nIf you need to know where is the SSD your‚Äôre looking at, check the Evictions graph legend:\nStarting from PoliGraf 0.99b we‚Äôve added 2 new rows: Real Usage that let you monitor the vSAN flash tier filling up and IO Size that speaks for itself.\nThe Real Usage row may be very usefull to measure read cache warm up duration.\n"});index.add({'id':62,'href':'/tags/','title':"Tags",'content':""});index.add({'id':63,'href':'/toc-tree/','title':"ToC Tree",'content':"This is just a demo section for the toc-treeshortcode.\n   Level 1     Level 1.1     Level 1.2     Level 1.3     Level 1.3.1         Level 2     Level 2.1     Level 2.2       "});index.add({'id':64,'href':'/vmware-vsan/vsan-top-n-vmdk/','title':"Top N vmdk",'content':"The vSAN Top N vmdk dashboard (added in PoliGraf 0.99a) let you immediately identify the most active VMs on your vsanDatastore ‚Äúlike‚Äù the infamously slow Virtual Machine Disk (Top 10) which is not available for vSAN datastores :\nYou‚Äôll be able to observe flat vmdk as well as snapshots redo logs activity, select only few vm disks to inspect and also chose between Current, Average or Max consolidation over the selected time range:\n"});index.add({'id':65,'href':'/vmware-vsphere/vcenter-active-sessions/','title':"vCenter Active Sessions",'content':"Sometimes you may need to monitor vCenter active sessions for troubleshooting purpose since, even if it‚Äôs not officially documented (yet), some of us knows the famous ‚ÄúSOAP session count limit reached‚Äù error around 2000 active sessions. In Sexigraf 0.99e update, we‚Äôve added a dashboard to let you visualize the active sessions count for every vCenter registered in the credentials store with a user granted with ‚Äúview and stop sessions‚Äù role. Read only accounts won‚Äôt work.\n\nBut we didn‚Äôt stopped there, we also added a count per username (the dashed lines). it‚Äôs PoliGraf after all üòâ\nThe hover tooltip will show you the vCenter total active sessions on top of the list and all the accounts connected. In the screenshot above we can see that the NetBackup account is the reason of the peak. Backup time obviously üôÇ\n"});index.add({'id':66,'href':'/vmware-vsphere/vcenter-bad-events/','title':"vCenter Bad Events",'content':"After years of SexiLog feedback, we figured out that some VMware users are well aware of the ESXi logs monitoring benefits. We also discovered that the configuration needed to get syslog working is sometime confusing (syslog target, firewall, etc..) but also that the security behind it is also a concern. And of course there is the big players with thousands of ESXi to manage. For all those reasons, starting from PoliGraf 0.99f, we now included event monitoring! Bad ones obviously üòâ\n\nYou‚Äôll now be able to see what is happening on your infrastructure (at computeResource level so even standalone hosts are included) without anything more to do but deploy PoliGraf and enjoy our new dashboard with events per Cluster on top and events per TypeId at the bottom. Behind the scene, we fetch the list of ‚Äúbad‚Äù events available on your vCenter so even future vSphere version will be supported and then we ask the eventManager if those events occurred in the last 5 minutes. Here is a small example of what we could get from our ‚Äútest‚Äù setup:\n BadUsernameSessionEvent\nClusterOvercommittedEvent\ncom_vmware_vc_certmgr_HostCertExpirationImminentEvent\ncom_vmware_vc_HA_DasHostFailedEvent\ncom_vmware_vc_ha_VmRestartedByHAEvent\ncom_vmware_vc_VmDiskConsolidationNeeded\nesx_audit_host_boot\nesx_problem_net_connectivity_lost\nesx_problem_net_vmknic_ip_duplicate\nesx_problem_scsi_device_state_permanentloss\nesx_problem_storage_apd_start\nesx_problem_storage_redundancy_lost\nesx_problem_visorfs_ramdisk_inodetable_full\nesx_problem_vmfs_heartbeat_timedout\nesx_problem_vmfs_nfs_server_disconnect\nesx_problem_vmfs_resource_corruptondisk\nesx_problem_vsan_no_network_connectivity\nInsufficientFailoverResourcesEvent\nmsg_snapshot_quiesce_timeout\nVmInstanceUuidConflictEvent\nVmMacConflictEvent\nVmMaxRestartCountReached\nVmOrphanedEvent\nvob_fssvec_lookup_file_failed\nvob_vmotion_transmit_vbuf_not_connected\n \n\n\nThis is more than enough for most of any VMware admin but remember, if you want more, you need syslog üòâ\n"});index.add({'id':67,'href':'/web-admin/vcenter-credstore/','title':"vCenter Credstore",'content':"Out of the box, PoliGraf will not pull any data as it don‚Äôt know where your vCenter servers are. First of all, after you‚Äôve deployed it on your platform, you will have to add vCenter information to let the appliance start fetching data. This operation can be achieve from the Credential Store tool. Just go on the PoliGraf Web Admin dashboard and select Credential Store. You will then see the list of all vCenter you already have set up. If you want to add another entry, you just have to type the 3 mandatory parameters and press Add and set it up:\n vCenter IP or FQDN. In case of FQDN, the appliance must be able to resolve it! Username that PoliGraf will use to query the vCenter (any read-only account is enough, you can use SAM, UPN or single user format) Password that comes with this username  As we distinguish VI stats from VSAN ones (because VI stats are pulled every 5 min and VSAN stats every 1 min), you can choose if you want to query VI, or VSAN, or both by enable/disable it thanks to the Action menu on the right of the vCenter.\nNote: The credentials are used to create a session that will last as long as possible using a session file to avoid login/logoff events.\nAs soon as you added vCenter information, offline inventory will be generated. Just grab a coffee and wait a few minutes for PoliGraf to retrieve stats, and start Monitoring, like a boss!  "});index.add({'id':68,'href':'/web-admin/vi-offline-inventory/','title':"VI Offline Inventory",'content':"When you work with several vCenter on your platform, it could be a pain in the \u0026hellip; tricky to find virtual machine for daily-basis administration tasks. What we used to do during our past job experience is to build some static inventory, to be able to search quickly cross-vCenter some virtual machine information. It can be really useful, specially if you have an outage and you want to see on which ESX was your vCenter VM.\nSo we thought about adding this \u0026ldquo;feature\u0026rdquo; to PoliGraf as it could be useful to another admin. You could find this offline inventory available on the PoliGraf VI Offline Inventory dashboard. It‚Äôs generated every 1 hour (since 0.99e, previously it was 6 hours) and let you search in any column listed. As we added a lot of info, we wanted to not make too messy, so we hid by default some columns. On the top of the page, you will be able to click on each button that represent a column to dynamically show/hide it.\nStarting from PoliGraf 0.99d, you can click on any VM or Cluster to be redirected on a the corresponding VM Stats or Cluster FullStats dashboard. We‚Äôve also added ‚Äúblue folder‚Äù path property:\n"});index.add({'id':69,'href':'/vmware-vsan/vsan-capacity/','title':"vSAN Capacity",'content':"As per VMware Virtual SAN 6.0 Design and Sizing Guide: ‚ÄúVMware is recommending, if possible, 30% free capacity across the Virtual SAN datastore. The reasoning for this slack space size is that Virtual SAN begins automatic rebalancing when a disk reaches the 80% full threshold, generating rebuild traffic on the cluster‚Äù. Moreover, if one disk (or flash capacity) of a disk group is full, the VM with objects on it are stunned until vSAN has finish the rebalance of the objects.\nIn vSAN Observer, you can check the upper, lower and average disk (or flash capacity) usage per host but not per cluster and most importantly you won‚Äôt be able to see the trend so you won‚Äôt be able to predict anything.\nThe vSAN Capacity dashboard shows you the nodes capacity metrics of the entire cluster and allow you to anticipate futur storage needs. For each host, the shadow represents the min/max area of the diskgroups and the dark line represents the average.\n"});index.add({'id':70,'href':'/vmware-vsan/vsan-monitor/','title':"vSAN Monitor",'content':"\nIf this dashboard looks familiar this is because it is heavily inspired from vSAN Observer:\nBut unlike vSAN Observer, PoliGraf makes vSAN Monitor persistent because when you need it you most likely want to know what just happened. Since you have to launch vSAN Observer and wait few minutes, that particular moment is gone. vSAN Monitor let you explore 6 months from now so you can relax.\nNevertheless, vSAN Monitor is NOT a replacement for vSAN Observer since it only offers the primary ‚Äútabs‚Äù where you‚Äôll be able to check the global activity of your vSAN cluster per nodes. When you need to deep dive, you‚Äôll still need vSAN Observer. Badly.\nSince some brillant guys at VMware already explain how to read vSAN metrics, you‚Äôll need to check those papers if you not already did : Monitoring VMware Virtual SAN with Virtual SAN Observer \u0026amp; VMware Virtual SAN Diagnostics and Troubleshooting Reference Manual.\nThe layer label let you switch beetween vSAN layers described in the vSAN Observer help section:\n Client: This view shows vSAN statistics from the view point of the vSAN client running on each host. In other words, this view represents the vSAN performance as seen by VMs running on the hosts for which statistics are shown.\nIf this view shows any unexpected performance, one needs to drill down further to understand where performance issues may be coming from. It is important to understand that due to the distributed nature of vSAN each host accesses data from all hosts, so any performance issue seen on this view may be caused by any host in the vSAN cluster.\nDisks: This view shows vSAN statistics of the physical disk layer of each host. In other words, this view allows to determine if there is any contention on any of the disk groups that make up the overall vSAN cluster. Note that the statistics shown are purely the physical disk layer and do not include any other vSAN overhead (e.g. networking or vSAN RAID). Also remember that due to the distributed nature of vSAN the physical disks of one host are accessed by VMs on all hosts in the vSAN cluster.\nIf this view shows physical disk contention across a majority of hosts then this likely indicates that the workload run by VMs is collectively higher than the vSAN cluster can handle. In that case, either reduce the storage workload, or check the detailed physical device view to determine if you need more HDDs or SSDs.\nIf however only a single host‚Äôs physical disks are contended, while other hosts are operating fine, then you may have an imbalance, e.g. caused by particularly noisy VMs.\nOwner: The DOM owner is a vSAN internal layer. For every vSAN object vSAN elects one host to be the ‚Äòowner‚Äô. The owner performance all RAID functionality and ensures correctness, even under concurrent access by multiple clients. All IO flows from the vSAN client to the owner and then to the disk layer. vSAN tries to co-locate the owner and the client to not incur an additional network hop. However, the user can‚Äôt influence where the owner for a given object is located, so reading the below graphs and correlating them with the client and disks graphs can be very difficult.\n You may have noticed the last column is not Latency stddev but Read Cache Hit Rate since we believe it offers a more syntetic view. We also got thresholds like vSAN Observer but Grafana‚Äôs are areas so you know exaclty when the metric hits the roof and for how long. As per vSAN Observer settings, the threshold for latency is 30ms, 20 for congestion and 30 for latency SD.\nWe also added colors üòâ\nSince All Flash cluster has no SSD read cache, we added a dedicated AF version of the vSAN monitor dashboard in v0.99c\n All-flash clusters have two types of flash: very fast and durable write cache, and more capacious and cost-effective capacity flash. Here cache is 100% allocated for writes, as read performance from capacity flash is more than sufficient.\n Some of you also asked us a dashboard to let them monitor multiple vSAN clusters at once. Enjoy the new VMware Multi vSAN Monitor dashboard (from v0.99c):\nSupport for vSAN 6.6 APIs has been added to PoliGraf 0.99d so for those having ESXi 6.5.0d+ vSAN cluster with v5 on-disk format, we‚Äôve created an enhanced vSAN Monitor 66 dashboard with the new resyncRead and client.cachestats metrics.\nThe new client cache was introduced in vSAN 6.2 but not exposed in the public APIs until vSAN 6.6 release.\n As of 6.2 vSAN also has a small in-memory read cache. Small in this case means 0.4% of a host‚Äôs memory capacity up to a max of 1GB. Note that this in-memory cache is a client side cache, meaning that the blocks of a VM are cached on the host where the VM is located.\n Since vSAN 6.6, you can also monitor the resync traffic per diskgroup from within the vCenter UI!! \\o/\n\n"});index.add({'id':71,'href':'/vmware-vsan/vsan-monitor-2nd-ftt/','title':"vSAN Monitor 2nd FTT",'content':"As described in VMware vSAN 6.6 Technical Overview white paper, vSAN 6.6 introduce secondary level of failures to tolerate (SFTT) for stretched clusters:\n Starting with vSAN 6.6, it is possible to configure a secondary level of failures to tolerate. This feature enables resiliency within a site, as well as, across sites. For example, RAID-5 erasure coding protects objects within the same site while RAID-1 mirroring protects these same objects across sites.\n After snooping into the undocumented metrics, we discovered that the SFTT traffic is ‚Äúmonitorable‚Äù through 2 new counters called ‚Äúproxy‚Äù and ‚Äúanchor‚Äù so, starting from v0.99d, we added a dedicated dashboard inspired from the vSAN Monitor one. Meet vSAN Monitor 2nd FTT:\n\nSince we had some free space left on the dashboard, we also added some UNMAP metrics.\n"});index.add({'id':72,'href':'/web-admin/','title':"Web Admin",'content':"What we wanted to achieve was to make an appliance as easy to use as possible. Therefore we developed some tools to make your life easier using PoliGraf. First, the Home page let you monitor the health of your appliance thanks to collectd:\n\nEvery tools are available through the web interface thanks to predefined dashboards like PoliGraf Web Admin or PoliGraf VI Offline Inventory. Just navigate to your PoliGraf web-ui with your favorite browser and select one of these dashboards as seen below:\nYou will have access then to the tool grid which let you select what you want to access to. As we will add more features to PoliGraf, we may also add other web tools in this section, so it may evolve in the future:\n"});})();